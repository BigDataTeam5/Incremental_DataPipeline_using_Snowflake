/*-----------------------------------------------------------------------------
  setup.sql
  Single Script for DEV environment

  Usage (SnowSQL):
    snowsql -a <ACCOUNT> -u <USER> -f setup.sql

-----------------------------------------------------------------------------*/

-- Step 0: Use an admin-level role so we can create/alter objects.
USE ROLE ACCOUNTADMIN;

-- Step 1: Set the environment to DEV
SET env = 'DEV';

SELECT 'ENV variable set to: ' || $env AS ENVIRONMENT_CHECK;

-- Step 2: Create/Configure a single role and warehouse (shared by all envs)
-- (Optional: you might already have these objects, or prefer your own naming.)
SET MY_USER = CURRENT_USER();

CREATE OR REPLACE ROLE CO2_ROLE;
GRANT ROLE HOL_ROLE TO ROLE SYSADMIN;

GRANT ROLE CO2_ROLE TO USER IDENTIFIER($MY_USER);

-- Grant necessary privileges 
GRANT CREATE DATABASE ON ACCOUNT TO ROLE CO2_ROLE;
GRANT CREATE WAREHOUSE ON ACCOUNT TO ROLE CO2_ROLE;
GRANT EXECUTE TASK ON ACCOUNT TO ROLE CO2_ROLE;
GRANT MONITOR EXECUTION ON ACCOUNT TO ROLE CO2_ROLE;
GRANT IMPORTED PRIVILEGES ON DATABASE SNOWFLAKE TO ROLE CO2_ROLE;

-- Create or replace a single shared warehouse
CREATE OR REPLACE WAREHOUSE CO2_WH
  WAREHOUSE_SIZE = XSMALL
  AUTO_SUSPEND   = 300
  AUTO_RESUME    = TRUE;
GRANT OWNERSHIP ON WAREHOUSE CO2_WH TO ROLE CO2_ROLE;

-- Step 3: Create the DEV environment-specific database
CREATE OR REPLACE DATABASE CO2_DB_DEV;

-- Grant ownership to CO2_ROLE
GRANT OWNERSHIP ON DATABASE CO2_DB_DEV TO ROLE CO2_ROLE;

-- Step 4: Switch context to the shared role/warehouse and the new environment DB
USE ROLE CO2_ROLE;
USE WAREHOUSE CO2_WH;
USE DATABASE CO2_DB_DEV;

-- Step 5: Create schemas - same names for both DEV and PROD
CREATE OR REPLACE SCHEMA EXTERNAL;
CREATE OR REPLACE SCHEMA RAW_CO2;
CREATE OR REPLACE SCHEMA HARMONIZED_CO2;
CREATE OR REPLACE SCHEMA ANALYTICS_CO2;

-- Grant ownership to CO2_ROLE
GRANT OWNERSHIP ON SCHEMA EXTERNAL TO ROLE CO2_ROLE;
GRANT OWNERSHIP ON SCHEMA RAW_CO2 TO ROLE CO2_ROLE;
GRANT OWNERSHIP ON SCHEMA HARMONIZED_CO2 TO ROLE CO2_ROLE;
GRANT OWNERSHIP ON SCHEMA ANALYTICS_CO2 TO ROLE CO2_ROLE;


-- Grant privileges on schemas
GRANT CREATE FUNCTION ON SCHEMA EXTERNAL TO ROLE CO2_ROLE;
GRANT CREATE FUNCTION ON SCHEMA RAW_CO2 TO ROLE CO2_ROLE;
GRANT CREATE FUNCTION ON SCHEMA HARMONIZED_CO2 TO ROLE CO2_ROLE;
GRANT CREATE FUNCTION ON SCHEMA ANALYTICS_CO2 TO ROLE CO2_ROLE;
GRANT CREATE TABLE ON SCHEMA EXTERNAL TO ROLE CO2_ROLE;
GRANT CREATE TABLE ON SCHEMA RAW_CO2 TO ROLE CO2_ROLE;
GRANT CREATE TABLE ON SCHEMA HARMONIZED_CO2 TO ROLE CO2_ROLE;
GRANT CREATE TABLE ON SCHEMA ANALYTICS_CO2 TO ROLE CO2_ROLE;

-- Step 6: (Optional) Create file format and stage with the same names
USE SCHEMA EXTERNAL;

CREATE OR REPLACE FILE FORMAT CSV_CO2_FORMAT
  TYPE = CSV
  FIELD_DELIMITER = ','
  SKIP_HEADER = 1
  NULL_IF = ('', 'NULL')
  FIELD_OPTIONALLY_ENCLOSED_BY = '"'
  TRIM_SPACE = TRUE
;

CREATE OR REPLACE STAGE NOAA_CO2_STAGE
  URL = 's3://noa-co2-datapipeline/noaa-co2-data/'
  CREDENTIALS = (AWS_KEY_ID = 'AKIA54WIGFLOP2XEB5GH' AWS_SECRET_KEY = 'ZjGwllQFsSFnQDnNr+/9/WbqyCrDfCIkGms8Lgli')
  FILE_FORMAT = CSV_CO2_FORMAT
  COMMENT = 'Mauna Loa CO2 data stage (shared for all env)'
;
-- Grant privileges on stage
GRANT READ ON STAGE NOAA_CO2_STAGE TO ROLE CO2_ROLE;
GRANT WRITE ON STAGE NOAA_CO2_STAGE TO ROLE CO2_ROLE;

-- Done!
-- We have a single role, single warehouse, and environment-specific DB only.
SELECT 'Setup complete. Environment DB is CO2_DB_DEV' AS SETUP_MESSAGE;